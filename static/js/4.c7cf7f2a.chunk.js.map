{"version":3,"sources":["components/Renderer/Camera.js","components/Renderer/Model.js","components/Renderer/Renderer.js","pages/Landing/Home/Home.js","pages/Landing/Home/index.js"],"names":["Camera","useThree","camera","gl","useEffect","controls","OrbitControls","domElement","minDistance","maxDistance","dispose","Model","props","group","useRef","useLoader","GLTFLoader","nodes","animations","texture","THREE","actions","useState","mixer","useFrame","state","delta","update","current","idle","clipAction","play","forEach","clip","uncacheClip","ref","rotation","Math","PI","object","receiveShadow","castShadow","geometry","skeleton","map","map-flipY","skinning","Plane","args","transparent","opacity","Renderer","d","shadowMap","pixelRatio","position","className","skyColor","groundColor","intensity","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","color","fallback","scale","Home"],"mappings":"uLAkBeA,EAdA,WAAO,IAAD,EACIC,cAAfC,EADW,EACXA,OAAQC,EADG,EACHA,GAUhB,OATAC,qBAAU,WACR,IAAMC,EAAW,IAAIC,IAAcJ,EAAQC,EAAGI,YAI9C,OAFAF,EAASG,YAAc,EACvBH,EAASI,YAAc,GAChB,WACLJ,EAASK,aAEV,CAACR,EAAQC,IACL,M,wBCqBMQ,EA/BD,SAACC,GACb,IAAMC,EAAQC,mBADS,EAEOC,YAAUC,IAAY,sBAA5CC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,WACTC,EAAUJ,YAAUK,gBAAqB,sBACzCC,EAAUP,mBAJO,EAKPQ,oBAAS,kBAAM,IAAIF,oBAA5BG,EALgB,oBAcvB,OAPAC,aAAS,SAACC,EAAOC,GAAR,OAAkBH,EAAMI,OAAOD,MACxCtB,qBAAU,WAGR,OAFAiB,EAAQO,QAAU,CAAEC,KAAMN,EAAMO,WAAWZ,EAAW,GAAIL,EAAMe,UAChEP,EAAQO,QAAQC,KAAKE,OACd,kBAAMb,EAAWc,SAAQ,SAACC,GAAD,OAAUV,EAAMW,YAAYD,UAI5D,+CAAOE,IAAKtB,GAAWD,GAAvB,IAA8BF,QAAS,KAAvC,SACE,wBAAO0B,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,2BAAWC,OAAQtB,EAAK,gBACxB,6BACEuB,eAAa,EACbC,YAAU,EACVC,SAAUzB,EAAK,MAAUyB,SACzBC,SAAU1B,EAAK,MAAU0B,SAJ3B,SAME,sCAAsBC,IAAKzB,EAAS0B,aAAW,EAAOC,UAAQ,aCxBlEC,EAAQ,SAAC,GAAkB,IAAbnC,EAAY,oBAC5B,OACI,iDAAUA,GAAV,IAAiB4B,eAAa,EAA9B,UACI,qCAAqBQ,KAAM,CAAC,IAAK,IAAK,EAAG,KACzC,gCAAgBC,aAAW,EAACC,QAAS,UAwDlCC,EAvCE,WACb,IAAMC,EAAI,KAEV,OACI,eAAC,IAAD,CACIC,WAAS,EACTC,WAAY,CAAC,EAAG,KAChBpD,OAAQ,CAAEqD,SAAU,CAAC,GAAI,EAAG,KAC5BC,UAAU,wBAJd,UAMI,cAAC,EAAD,IACA,iCACIC,SAAU,QACVC,YAAa,SACbC,UAAW,GACXJ,SAAU,CAAC,EAAG,GAAI,KAEtB,kCACIA,SAAU,EAAE,EAAG,GAAI,GACnBK,sBAAyB,EAALR,EACpBS,wBAA2B,EAALT,EACtBU,sBAAqBV,EACrBW,oBAAmBX,EACnBY,qBAAoB,GACpBC,oBAAmB,KACnBxB,YAAU,IAEd,uBAAMc,SAAU,EAAE,IAAM,KAAM,GAAInB,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAA9D,UACI,sCAAsBU,KAAM,CAAC,EAAG,MAChC,mCAAmBkB,MAAM,iBAE7B,cAAC,EAAD,CAAO9B,SAAU,EAAE,GAAMC,KAAKC,GAAI,EAAG,GAAIiB,SAAU,CAAC,GAAI,EAAG,KAC3D,cAAC,WAAD,CAAUY,SAAU,KAApB,SACI,cAAC,EAAD,CAAOZ,SAAU,CAAC,GAAI,EAAG,GAAIa,MAAO,CAAC,GAAK,GAAK,YC/ChDC,EARF,WACX,OACE,qBAAKb,UAAU,cAAf,SACE,cAAC,EAAD,OCLSa","file":"static/js/4.c7cf7f2a.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useThree } from \"react-three-fiber\";\n\nconst Camera = () => {\n  const { camera, gl } = useThree();\n  useEffect(() => {\n    const controls = new OrbitControls(camera, gl.domElement);\n\n    controls.minDistance = 3;\n    controls.maxDistance = 20;\n    return () => {\n      controls.dispose();\n    };\n  }, [camera, gl]);\n  return null;\n};\n\nexport default Camera;\nexport { Camera };\n","import * as THREE from \"three\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst Model = (props) => {\n  const group = useRef();\n  const { nodes, animations } = useLoader(GLTFLoader, \"./models/stacy.glb\");\n  const texture = useLoader(THREE.TextureLoader, \"./models/stacy.jpg\");\n  const actions = useRef();\n  const [mixer] = useState(() => new THREE.AnimationMixer());\n\n  useFrame((state, delta) => mixer.update(delta));\n  useEffect(() => {\n    actions.current = { idle: mixer.clipAction(animations[8], group.current) };\n    actions.current.idle.play();\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip));\n  });\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <primitive object={nodes[\"mixamorigHips\"]} />\n        <skinnedMesh\n          receiveShadow\n          castShadow\n          geometry={nodes[\"stacy\"].geometry}\n          skeleton={nodes[\"stacy\"].skeleton}\n        >\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\n        </skinnedMesh>\n      </group>\n    </group>\n  );\n};\n\nexport default Model;\nexport { Model };\n","import React, { Suspense, useRef } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport Camera from \"./Camera\";\nimport Model from \"./Model\";\n\nconst Plane = ({ ...props }) => {\n    return (\n        <mesh {...props} receiveShadow>\n            <planeBufferGeometry args={[500, 500, 1, 1]} />\n            <shadowMaterial transparent opacity={0.2} />\n        </mesh>\n    );\n};\n\nconst styles = {\n    iframe: {\n        border: '0 none',\n        width: '100%',\n        height: '450px'\n    },\n    canvas: {\n        height: '450px'\n    }\n};\n\n\nconst Renderer = () => {\n    const d = 8.25;\n\n    return (\n        <Canvas\n            shadowMap\n            pixelRatio={[1, 1.5]}\n            camera={{ position: [0, -3, 18] }}\n            className=\"min-h-80 md:min-h-120\"\n        >\n            <Camera />\n            <hemisphereLight\n                skyColor={\"black\"}\n                groundColor={0xffffff}\n                intensity={0.5}\n                position={[0, 50, 0]}\n            />\n            <directionalLight\n                position={[-8, 20, 8]}\n                shadow-camera-left={d * -1}\n                shadow-camera-bottom={d * -1}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-near={0.1}\n                shadow-camera-far={1500}\n                castShadow\n            />\n            <mesh position={[-0.5, -7.2, -2]} rotation={[-Math.PI / 2, 0, 0]}>\n                <circleBufferGeometry args={[8, 64]} />\n                <meshBasicMaterial color=\"lightpink\" />\n            </mesh>\n            <Plane rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -7, 0]} />\n            <Suspense fallback={null}>\n                <Model position={[0, -7, 0]} scale={[0.1, 0.1, 0.1]} />\n            </Suspense>\n        </Canvas>\n    );\n};\n\nexport default Renderer;\nexport { Renderer };\n","import React from \"react\";\n\nimport { Renderer } from \"components/Renderer\";\n\nconst Home = () => {\n  return (\n    <div className=\"text-center\">\n      <Renderer />\n    </div>\n  );\n};\n\nexport default Home;\nexport { Home };\n","import Home from './Home';\n\nexport default Home;\nexport { Home };\n"],"sourceRoot":""}